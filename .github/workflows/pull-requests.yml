name: Pull Requests

on:
  pull_request:
    branches:
      - master

permissions:
  contents: read

jobs:
  Changesets:
    # Changesets no longer exist when releasing
    if: github.event_name == 'pull_request' && !startsWith(github.event.pull_request.title, 'ðŸ¦‹ Changeset release')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/cache@v4
        id: cache-node_modules
        with:
          path: node_modules
          key: ubuntu-latest-20-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ubuntu-latest-20-${{ hashFiles('**/package-lock.json') }}
      - if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: npm ci
      - run: npx changeset status --since=${{ github.event.pull_request.base.sha }}

  Commitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/cache@v4
        id: cache-node_modules
        with:
          path: node_modules
          key: ubuntu-latest-20-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ubuntu-latest-20-${{ hashFiles('**/package-lock.json') }}
      - if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: npm ci
      - run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

  ESLint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/cache@v4
        id: cache-node_modules
        with:
          path: node_modules
          key: ubuntu-latest-20-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ubuntu-latest-20-${{ hashFiles('**/package-lock.json') }}
      - if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: npm ci
      - run: npm run lint

  test-node-range:
    name: Test Node.js version range
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/cache@v4
        id: cache-node_modules
        with:
          path: node_modules
          key: ubuntu-latest-20-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ubuntu-latest-20-${{ hashFiles('**/package-lock.json') }}
      - if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: npm ci
      - run: node ./scripts/test-node-range.js

  test-matrix:
    strategy:
      matrix:
        # Test with Node.js active LTS versions, and the latest version
        node:
          - 18
          - 20
          - 21
          - 22
        # Test with Ubuntu, macOS, and Windows
        os:
          - ubuntu-latest
          - macos-14 # macOS Sonoma M1 runners
          - windows-latest
    name: Node.js v${{ matrix.node }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - if: matrix.os == 'windows-latest'
        run: git config --global core.autocrlf true
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - uses: actions/cache@v4
        id: cache-node_modules
        with:
          path: node_modules
          key: ${{ matrix.os }}-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
      - if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: npm ci
      # Print current Node.js version
      - run: node --version
      # Print current npm version
      - run: npm --version
      # Print current Git version
      - run: git --version
      # Print lint-staged version
      - run: node bin/lint-staged.js --version
      # Print lint-staged help text
      - run: node bin/lint-staged.js --help
      # Run tests
      - run: npm test
      - uses: actions/upload-artifact@v4
        if: matrix.os == 'ubuntu-latest' && matrix.node == '20'
        with:
          name: cobertura-coverage.xml
          path: coverage/cobertura-coverage.xml

  test-msys2:
    strategy:
      matrix:
        node:
          - 18
          - 20
          - 21
          - 22
    name: Node.js ${{ matrix.node }} on windows-latest (MSYS2)
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          path-type: inherit
      - run: git config --global core.autocrlf true
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - uses: actions/cache@v4
        id: cache-node_modules
        with:
          path: node_modules
          key: windows-latest-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            windows-latest-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
      - if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: npm ci
      - run: node --version
      - run: npm --version
      - run: git --version
      - run: node bin/lint-staged.js --version
      - run: node bin/lint-staged.js --help
      - run: npm test

  test-cygwin:
    strategy:
      matrix:
        node:
          - 18
          - 20
          - 21
          - 22
    name: Node.js ${{ matrix.node }} on windows-latest (Cygwin)
    runs-on: windows-latest
    steps:
      - uses: cygwin/cygwin-install-action@v4
      - run: git config --global core.autocrlf true
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - uses: actions/cache@v4
        id: cache-node_modules
        with:
          path: node_modules
          key: windows-latest-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            windows-latest-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
      - if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: npm ci
      - run: node --version
      - run: npm --version
      - run: git --version
      - run: node bin/lint-staged.js --version
      - run: node bin/lint-staged.js --help
      - run: npm test

  codecov:
    name: Code Coverage
    permissions:
      pull-requests: write
    runs-on: ubuntu-latest
    needs:
      - Changesets
      - Commitlint
      - ESLint
      - test-cygwin
      - test-matrix
      - test-msys2
      - test-node-range
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: cobertura-coverage.xml
      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: cobertura-coverage.xml
          badge: true
          format: markdown
          output: both
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          hide_and_recreate: true
          hide_classify: 'OUTDATED'
          path: code-coverage-results.md
      # Run action again to fail PR status _after_ posting PR comment
      - name: Fail PR with low coverage
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: cobertura-coverage.xml
          fail_below_min: 100
