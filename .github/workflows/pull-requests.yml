name: Pull Requests

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  npm:
    uses: ./.github/workflows/npm.yml

  Changesets:
    needs: npm
    # Changesets no longer exist when releasing
    if: github.event_name == 'pull_request' && !startsWith(github.event.pull_request.title, 'ðŸ¦‹ Changeset release')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v5
        with:
          node-version-file: .node-version
          package-manager-cache: false
      - uses: actions/cache@v4
        id: cache-node_modules
        with:
          path: node_modules
          key: node-modules-ubuntu-latest-${{ hashFiles('package-lock.json') }}
      - run: npx changeset status --since=${{ github.event.pull_request.base.sha }}

  Commitlint:
    needs: npm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v5
        with:
          node-version-file: .node-version
          package-manager-cache: false
      - uses: actions/cache@v4
        id: cache-node_modules
        with:
          path: node_modules
          key: node-modules-ubuntu-latest-${{ hashFiles('package-lock.json') }}
      - run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

  TypeScript:
    needs: npm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v5
        with:
          node-version-file: .node-version
          package-manager-cache: false
      - uses: actions/cache@v4
        id: cache-node_modules
        with:
          path: node_modules
          key: node-modules-ubuntu-latest-${{ hashFiles('package-lock.json') }}
      - run: npm run typecheck

  ESLint:
    needs: npm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v5
        with:
          node-version-file: .node-version
          package-manager-cache: false
      - uses: actions/cache@v4
        id: cache-node_modules
        with:
          path: node_modules
          key: node-modules-ubuntu-latest-${{ hashFiles('package-lock.json') }}
      - run: npm run lint

  test-node-range:
    name: Test Node.js version range
    needs: npm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v5
        with:
          node-version-file: .node-version
          package-manager-cache: false
      - uses: actions/cache@v4
        id: cache-node_modules
        with:
          path: node_modules
          key: node-modules-ubuntu-latest-${{ hashFiles('package-lock.json') }}
      - run: node ./scripts/test-node-range.js

  test-matrix:
    strategy:
      matrix:
        # Test with Node.js active LTS versions, and the latest version
        node:
          - '20.17.0' # lowest supported version
          - '20.x'
          - '22.x'
          - '24.x'
        # Test with Ubuntu, macOS, and Windows
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    name: Node.js v${{ matrix.node }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - if: matrix.os == 'windows-latest'
        run: git config --global core.autocrlf true
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node }}
          package-manager-cache: false
      - uses: actions/cache@v4
        id: cache-node_modules
        with:
          path: node_modules
          key: node-modules-${{ matrix.os }}-${{ hashFiles('package-lock.json') }}
      - if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts
      # Print current Node.js version
      - run: node --version
      # Print current npm version
      - run: npm --version
      # Print current Git version
      - run: git --version
      # Print lint-staged version
      - run: node bin/lint-staged.js --version
      # Print lint-staged help text
      - run: node bin/lint-staged.js --help
      # Run tests
      - run: npm test

  test-msys2:
    strategy:
      matrix:
        node:
          - 20.17.0 # lowest supported version
          - 20
          - 22
          - 24
    name: Node.js ${{ matrix.node }} on windows-latest (MSYS2)
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          path-type: inherit
          install: >-
            git
      - run: git config --global core.autocrlf true
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node }}
          package-manager-cache: false
      - uses: actions/cache@v4
        id: cache-node_modules
        with:
          path: node_modules
          key: node-modules-windows-latest-${{ hashFiles('package-lock.json') }}
      - if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts
      - run: node --version
      - run: npm --version
      - run: git --version
      - run: node bin/lint-staged.js --version
      - run: node bin/lint-staged.js --help
      - run: npm test

  test-cygwin:
    strategy:
      matrix:
        node:
          - 20.17.0 # lowest supported version
          - 20
          - 22
          - 24
    name: Node.js ${{ matrix.node }} on windows-latest (Cygwin)
    runs-on: windows-latest
    steps:
      - uses: cygwin/cygwin-install-action@v5
      - run: git config --global core.autocrlf true
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node }}
          package-manager-cache: false
      - uses: actions/cache@v4
        id: cache-node_modules
        with:
          path: node_modules
          key: node-modules-windows-latest-${{ hashFiles('package-lock.json') }}
      - if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts
      - run: node --version
      - run: npm --version
      - run: git --version
      - run: node bin/lint-staged.js --version
      - run: node bin/lint-staged.js --help
      - run: npm test
